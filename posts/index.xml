<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Debakar Roy</title>
        <link>http://debakarr.github.io/posts/</link>
        <description>All Posts | Debakar Roy</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Sep 2019 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://debakarr.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>[LeetCode] 108. Convert Sorted Array to Binary Search Tree</title>
    <link>http://debakarr.github.io/posts/convert-sorted-array-to-binary-search-tree/</link>
    <pubDate>Fri, 06 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/convert-sorted-array-to-binary-search-tree/</guid>
    <description><![CDATA[Convert Sorted Array to Binary Search Tree Link to original Problem on LeetCode
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.
For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.
Example:
Given the sorted array: [-10,-3,0,5,9],
One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:]]></description>
</item>
<item>
    <title>[LeetCode] 384. Shuffle an Array</title>
    <link>http://debakarr.github.io/posts/shuffle-an-array/</link>
    <pubDate>Fri, 06 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/shuffle-an-array/</guid>
    <description><![CDATA[Shuffle an Array Link to original Problem on LeetCode
Shuffle a set of numbers without duplicates.
Example:
// Init an array with set 1, 2, and 3.int[] nums = {1,2,3};Solution solution = new Solution(nums);// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.solution.shuffle();// Resets the array back to its original configuration [1,2,3].solution.reset();// Returns the random shuffling of array [1,2,3].]]></description>
</item>
<item>
    <title>[LeetCode] 171. Excel Sheet Column Number</title>
    <link>http://debakarr.github.io/posts/excel-sheet-column-number/</link>
    <pubDate>Thu, 05 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/excel-sheet-column-number/</guid>
    <description><![CDATA[Excel Sheet Column Number Link to original Problem on LeetCode
Given a column title as appear in an Excel sheet, return its corresponding column number.
For example:
Example 1:
Input: &ldquo;A&rdquo;
Output: 1
Example 2:
Input: &ldquo;AB&rdquo;
Output: 28
Example 3:
Input: &ldquo;ZY&rdquo;
Output: 701
Company: Amazon
Solution (Using Hash Map):
Time Complexity: O(n) Space Complexity: O(1)
class Solution(object): def titleToNumber(self, s): &#34;&#34;&#34; :type s: str :rtype: int &#34;&#34;&#34; # First create a dictionary containing key &#39;A&#39; to &#39;Z&#39; # assigning &#39;A&#39;: 1, &#39;B&#39;: 2, &#39;C&#39;: 3, .]]></description>
</item>
<item>
    <title>[LeetCode] 230. Kth Smallest Element in a BST</title>
    <link>http://debakarr.github.io/posts/kth-smallest-element-in-a-bst/</link>
    <pubDate>Thu, 05 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/kth-smallest-element-in-a-bst/</guid>
    <description><![CDATA[Kth Smallest Element in a BST Link to original Problem on LeetCode
Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.
Note: You may assume k is always valid, 1 ≤ k ≤ BST&rsquo;s total elements.
Example 1:
Input: root = [3,1,4,null,2], k = 1
Output: 1
Example 2:
Input: root = [5,3,6,2,4,null,null,1], k = 3
Output: 3
Follow up: What if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently?]]></description>
</item>
<item>
    <title>[LeetCode] 122. Best Time to Buy and Sell Stock II</title>
    <link>http://debakarr.github.io/posts/best-time-to-buy-and-sell-stock-ii/</link>
    <pubDate>Wed, 04 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/best-time-to-buy-and-sell-stock-ii/</guid>
    <description><![CDATA[Best Time to Buy and Sell Stock II Link to original Problem on LeetCode
Say you have an array for which the ith element is the price of a given stock on day i.
Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).
Note: You may not engage in multiple transactions at the same time (i.]]></description>
</item>
<item>
    <title>[LeetCode] 217. Contains Duplicate</title>
    <link>http://debakarr.github.io/posts/contains-duplicate/</link>
    <pubDate>Wed, 04 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/contains-duplicate/</guid>
    <description><![CDATA[Contains Duplicate Link to original Problem on LeetCode
Given an array of integers, find if the array contains any duplicates.
Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.
Example 1:
Input: [1,2,3,1]
Output: true
Example 2:
Input: [1,2,3,4]
Output: false
Example 3:
Input: [1,1,1,3,3,4,3,2,4,2]
Output: true
Company: Amazon
Solution (Using Sorting):
Time Complexity: O(n log n) Space Complexity: O(1)]]></description>
</item>
<item>
    <title>Top Programming Questions [Updated]</title>
    <link>http://debakarr.github.io/posts/top-interview-questions/</link>
    <pubDate>Wed, 04 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/top-interview-questions/</guid>
    <description><![CDATA[Top Programming Questions [Updated] ]]></description>
</item>
<item>
    <title>[LeetCode] 13. Roman to Integer</title>
    <link>http://debakarr.github.io/posts/roman-to-integer/</link>
    <pubDate>Wed, 28 Aug 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/roman-to-integer/</guid>
    <description><![CDATA[Roman to Integer Link to original Problem on LeetCode
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000
For example, two is written as II in Roman numeral, just two one&rsquo;s added together. Twelve is written as, XII, which is simply X + II. The number twenty seven is written as XXVIIi, which is XX + V + II.]]></description>
</item>
<item>
    <title>[LeetCode] 169. Majority Element</title>
    <link>http://debakarr.github.io/posts/majority-element/</link>
    <pubDate>Tue, 27 Aug 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/majority-element/</guid>
    <description><![CDATA[Majority Element Link to original Problem on LeetCode
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.
You may assume that the array is non-empty and the majority element always exist in the array.
Example 1:
Input: [3,2,3]
Output: 3
Example 2:
Input: [2,2,1,1,1,2,2]
Output: 2
Company: Yahoo, Google, Amazon, Microsoft
Solution (Using Hashing - 2 pass):]]></description>
</item>
<item>
    <title>[LeetCode] 78. Subsets</title>
    <link>http://debakarr.github.io/posts/subsets/</link>
    <pubDate>Thu, 08 Aug 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/subsets/</guid>
    <description><![CDATA[Subsets Link to original Problem on LeetCode
Given a set of distinct integers, nums, return all possible subsets (the power set).
Note: The solution set must not contain duplicate subsets.
Example:
Input: nums = [1,2,3]
Output:
[ [3], [1], [2], [1,2,3], [1,3], [2,3], [1,2], [] ]
Company: Amazon, Microsoft
Solution (Using Iteration):
Time Complexity: Space Complexity:
class Solution(object): def subsets(self, nums): &#34;&#34;&#34; :type nums: List[int] :rtype: List[List[int]] &#34;&#34;&#34; # Let&#39;s take an example, say we have nums = [1, 2, 3] # Initially we have an empty subset in the result i.]]></description>
</item>
</channel>
</rss>
