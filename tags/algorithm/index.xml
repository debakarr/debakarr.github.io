<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Algorithm - Tag - Debakar Roy</title>
        <link>http://debakarr.github.io/tags/algorithm/</link>
        <description>Algorithm - Tag - Debakar Roy</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 Sep 2019 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://debakarr.github.io/tags/algorithm/" rel="self" type="application/rss+xml" /><item>
    <title>Top Programming Questions [Updated]</title>
    <link>http://debakarr.github.io/posts/top-interview-questions/</link>
    <pubDate>Wed, 04 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/top-interview-questions/</guid>
    <description><![CDATA[Top Programming Questions [Updated] ]]></description>
</item>
<item>
    <title>[LeetCode] 347. Top K Frequent Elements</title>
    <link>http://debakarr.github.io/posts/top-k-frequent-elements/</link>
    <pubDate>Fri, 02 Aug 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/top-k-frequent-elements/</guid>
    <description><![CDATA[Top K Frequent Elements Link to original Problem on LeetCode
Given a non-empty array of integers, return the k most frequent elements.
Example 1:
Input: nums = [1,1,1,2,2,3], k = 2 Output: [1,2]
Example 2:
Input: nums = [1], k = 1 Output: [1]
Note:
You may assume k is always valid, 1 ≤ k ≤ number of unique elements. Your algorithm&rsquo;s time complexity must be better than O(n log n), where n is the array&rsquo;s size.]]></description>
</item>
<item>
    <title>[LeetCode] 237. Delete Node in a Linked List</title>
    <link>http://debakarr.github.io/posts/delete-node-in-a-linked-list/</link>
    <pubDate>Thu, 25 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/delete-node-in-a-linked-list/</guid>
    <description><![CDATA[Delete Node in a Linked List Link to original Problem on LeetCode
Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.
Given linked list &ndash; head = [4,5,1,9], which looks like following:
Example 1:
Input: head = [4,5,1,9], node = 5
Output: [4,1,9]
Explanation: You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function.]]></description>
</item>
<item>
    <title>[LeetCode] 283. Move Zeroes</title>
    <link>http://debakarr.github.io/posts/move-zeroes/</link>
    <pubDate>Thu, 25 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/move-zeroes/</guid>
    <description><![CDATA[Move Zeroes Link to original Problem on LeetCode
Given an array nums, write a function to move all 0&rsquo;s to the end of it while maintaining the relative order of the non-zero elements.
Example:
Input: [0,1,0,3,12] Output: [1,3,12,0,0]
Note:
You must do this in-place without making a copy of the array. Minimize the total number of operations.
Company: Amazon, Bloomberg, Paytm, Samsung
Solution:
Time Complexity: O(n) Space Complexity: O(1)
class Solution(object): def moveZeroes(self, nums): &#34;&#34;&#34; :type nums: List[int] :rtype: None Do not return anything, modify nums in-place instead.]]></description>
</item>
<item>
    <title>[LeetCode] 206. Reverse Linked List</title>
    <link>http://debakarr.github.io/posts/reverse-linked-list/</link>
    <pubDate>Wed, 24 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/reverse-linked-list/</guid>
    <description><![CDATA[Reverse Linked List Link to original Problem on LeetCode
Reverse a singly linked list.
Example:
Input: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL Output: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL
Follow up:
A linked list can be reversed either iteratively or recursively. Could you implement both?
Company: Adobe, Amazon, MakeMyTrip, Microsoft, Qualcomm, Samsung
Solution (Iterative):
Time Complexity: Space Complexity:
class Solution(object): def reverseList(self, head): &#34;&#34;&#34; :type head: ListNode :rtype: ListNode &#34;&#34;&#34; # Video Explanation: https://youtu.be/sYcOK51hl-A # Credit: mycodeschool prev = None curr = head while curr: next = curr.]]></description>
</item>
<item>
    <title>[LeetCode] 238. Product of Array Except Self</title>
    <link>http://debakarr.github.io/posts/product-of-array-except-self/</link>
    <pubDate>Wed, 24 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/product-of-array-except-self/</guid>
    <description><![CDATA[Product of Array Except Self Link to original Problem on LeetCode
Given an array nums of n integers where n &gt; 1, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].
Example:
Input: [1,2,3,4] Output: [24,12,8,6]
Note: Please solve it without division and in O(n).
Follow up: Could you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.]]></description>
</item>
<item>
    <title>[Leetcode] 104. Maximum Depth of Binary Tree</title>
    <link>http://debakarr.github.io/posts/maximum-depth-of-binary-tree/</link>
    <pubDate>Tue, 23 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/maximum-depth-of-binary-tree/</guid>
    <description><![CDATA[Maximum Depth of Binary Tree Link to original Problem on LeetCode
Given a binary tree, find its maximum depth.
The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
Note: A leaf is a node with no children.
Example:
Given binary tree [3,9,20,null,null,15,7],
return its depth = 3.
Company: Goldman Sachs, Facebook, Bloomberg, Microsoft
Solution (Iterative using breadth first search):]]></description>
</item>
<item>
    <title>[LeetCode] 136. Single Number</title>
    <link>http://debakarr.github.io/posts/single-number/</link>
    <pubDate>Tue, 23 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/single-number/</guid>
    <description><![CDATA[Single Number Link to original Problem on LeetCode
Given a non-empty array of integers, every element appears twice except for one. Find that single one.
Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
Example 1:
Input: [2,2,1] Output: 1
Example 2:
Input: [4,1,2,1,2] Output: 4
Company: Amazon
Solution (Using HashMap):
Time Complexity: O(n) Space Complexity: O(n)
class Solution(object): def singleNumber(self, nums): &#34;&#34;&#34; :type nums: List[int] :rtype: int &#34;&#34;&#34; # Keep a dictionary count and at the end just check whether any number has a count of 1 numCount = {} for num in nums: numCount[num] = numCount.]]></description>
</item>
<item>
    <title>[LeetCode] 22. Generate Parentheses</title>
    <link>http://debakarr.github.io/posts/generate-parentheses/</link>
    <pubDate>Tue, 23 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/generate-parentheses/</guid>
    <description><![CDATA[Generate Parentheses Link to original Problem on LeetCode
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
For example, given n = 3, a solution set is:
[ &ldquo;((()))&rdquo;, &ldquo;(()())&rdquo;, &ldquo;(())()&rdquo;, &ldquo;()(())&rdquo;, &ldquo;()()()&rdquo; ]
Company: Microsoft, Facebook
Solution (Backtracking and Recursion):
Time Complexity: Space Complexity:
class Solution(object): def generateParenthesis(self, n): &#34;&#34;&#34; :type n: int :rtype: List[str] &#34;&#34;&#34; result = [] self.generateParenthesisHelper(n, n, &#34;&#34;, result) return result def generateParenthesisHelper(self, left, right, path, result): if left &gt; right: return if left == 0 and right == 0: result.]]></description>
</item>
<item>
    <title>[LeetCode] 344. Reverse String</title>
    <link>http://debakarr.github.io/posts/reverse-string/</link>
    <pubDate>Tue, 23 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Debakar Roy</author>
    <guid>http://debakarr.github.io/posts/reverse-string/</guid>
    <description><![CDATA[Reverse String Link to original Problem on LeetCode
Write a function that reverses a string. The input string is given as an array of characters char[].
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
You may assume all the characters consist of printable ascii characters.
Example 1:
Input: [&ldquo;h&rdquo;,&ldquo;e&rdquo;,&ldquo;l&rdquo;,&ldquo;l&rdquo;,&ldquo;o&rdquo;] Output: [&ldquo;o&rdquo;,&ldquo;l&rdquo;,&ldquo;l&rdquo;,&ldquo;e&rdquo;,&ldquo;h&rdquo;]
Example 2:
Input: [&ldquo;H&rdquo;,&ldquo;a&rdquo;,&ldquo;n&rdquo;,&ldquo;n&rdquo;,&ldquo;a&rdquo;,&ldquo;h&rdquo;] Output: [&ldquo;h&rdquo;,&ldquo;a&rdquo;,&ldquo;n&rdquo;,&ldquo;n&rdquo;,&ldquo;a&rdquo;,&ldquo;H&rdquo;]]]></description>
</item>
</channel>
</rss>
